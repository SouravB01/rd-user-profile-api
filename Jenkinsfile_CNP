#!groovy
properties([
    [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/rd-user-profile-api.git'],
    pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

@Library("Infrastructure")

def type = "java"
def product = "rd"
def component = "user-profile-api"

List<LinkedHashMap<String, Object>> secrets = [
    secret('s2s-url', 'S2S_URL'),
    secret('s2s-secret', 'IA_S2S_SECRET'),
    secret('s2s-microservice', 'IA_S2S_MICROSERVICE'),
    secret('db-up-password', 'DB_UP_PASSWORD'),
    secret('db-up-username', 'DB_UP_USERNAME'),
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}


def vaultOverrides = [
        'preview' : 'aat',
        'spreview': 'saat'
]

withPipeline(type, product, component) {

    after('smoketest:aat') {
        sh "rm -rf infrastructure/"
    }

    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)

    enableDbMigration()
    enableDockerBuild()
    installCharts()

    env.S2S_URL_FOR_TESTS = "http://rpe-service-auth-provider-${env}.service.core-compute-${env}.internal"


    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

}
